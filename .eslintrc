{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "plugin:ramda/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "@typescript-eslint",
    "ramda",
    "jest"
  ],
  "rules": {
    // "@typescript-eslint/rule-name": "error",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "block-like", "next": "*" },
      { "blankLine": "always", "prev": "*", "next": "block-like" },
      { "blankLine": "always", "prev": "*", "next": "block-like" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*"},
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"]},
      { "blankLine": "always", "prev": "function", "next": "function" }
    ],
    "no-multiple-empty-lines": ["error", { "max": 1 }],
    "prefer-destructuring": ["error", { "object": true, "array": false }],
    "no-underscore-dangle": 0,
    "lines-between-class-members": 0,
    "implicit-arrow-linebreak": 0,
    "no-debugger": 1,
    "comma-dangle": ["error", "always-multiline"],
    "max-len": [
      "error",
      120,
      2,
      {
        "ignoreUrls": true,
        "ignoreComments": false,
        "ignoreRegExpLiterals": true,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true
      }
    ],
    "no-mixed-operators": 0,
    "no-confusing-arrow": 0,
    "no-param-reassign": [
      2,
      {
        "props": false
      }
    ],
    "no-console": "error",
    // "@typescript-eslint/no-explicit-any": ["error", { "ignoreRestArgs": true }],
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "import/no-unresolved": 0,
    "import/no-extraneous-dependencies": 0,
    "no-array-constructor": 0,
    "import/prefer-default-export": 0,
    "jest/no-disabled-tests": 2,
    "jest/expect-expect": 2,
    "jest/no-focused-tests": 2,
    "jest/no-identical-title": 2,
    "jest/no-jest-import": 2,
    "jest/valid-expect-in-promise": 2,
    "jest/valid-describe": 2,
    "jest/prefer-to-have-length": 2,
    "jest/prefer-to-be-undefined": 2,
    "jest/prefer-to-be-null": 2,
    "jest/valid-expect": 2,
    "jest/consistent-test-it": [2,
    {
      "fn": "test",
      "withinDescribe": "test"
    }]
  },
  "env": {
    "es6": true,
    "node": true,
    "jest": true
  }
}
